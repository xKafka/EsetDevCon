//
// Created by xkafka on 7/9/20.
//

#ifndef ESETDEVCON_ADRESSLIST_H
#define ESETDEVCON_ADRESSLIST_H

#include <string>
#include <memory>
#include <utility>
#include <vector>
#include <iostream>
#include "File.h"

#include <ftw.h>

//class is used for storing all the adresses generated by FTW
//tuto classu upravit vyzera jak osrata

using fVector = std::vector<std::unique_ptr<File>>;

class AdressList
{
    fVector m_files{};
    const std::string *m_rootPath{};

public:
    AdressList() = default;
    explicit AdressList(const std::string *rootPath)   ///root path
        : m_rootPath(rootPath)
    { }

    AdressList(AdressList &) = delete;
    AdressList(AdressList &&) = delete;

    void push(const char *filePath, const size_t size)
    {
        m_files.emplace_back(std::make_unique<File>(filePath, size));
    }

    /// dangerous constructs, returns references to private variables

    [[nodiscard]] auto &files() const { return m_files; }
    [[nodiscard]] auto &rootPath() const { return m_rootPath; }

    auto at(size_t pos) { return m_files.at(pos).get(); }

    [[nodiscard]] auto getAdressAt(size_t pos) const { return m_files.at(pos)->path() + *m_rootPath; }

    auto begin() { return m_files.begin(); }
    auto end() { return m_files.end(); }
};


#endif //ESETDEVCON_ADRESSLIST_H
